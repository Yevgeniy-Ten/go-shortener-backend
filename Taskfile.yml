version: '3'

vars:
  build_cmd: "cd cmd/shortener && go build -o shortener *.go && cd ../.."
  test_cmd: "-binary-path=cmd/shortener/shortener -source-path=. -server-port=8080 --file-storage-path=storage"

tasks:
  install-linter:
    desc: Install golangci-lint based on the GOOS value from go env
    cmds:
      - |
        GOOS=$(go env GOOS)
        case "$GOOS" in
          "windows")
            if command -v choco > /dev/null; then
              echo "Installing golangci-lint with Chocolatey..."
              choco install golangci-lint
              exit 0
            else
              echo "Error: Chocolatey is not installed. Please install it first: https://chocolatey.org/install"
              exit 1
            fi
            ;;
          "darwin")
            if command -v brew > /dev/null; then
              echo "Installing golangci-lint with Homebrew..."
              brew install golangci-lint
              exit 0
            else
              echo "Error: Homebrew is not installed. Please install it first: https://brew.sh/"
              exit 1
            fi
            ;;
          "linux")
            if [ -f /etc/os-release ]; then
              . /etc/os-release
              if [ "$ID" = "ubuntu" ]; then
                echo "Ubuntu detected. Installing golangci-lint using snap..."
                sudo snap install golangci-lint --classic
                exit 0
              else
                echo "Linux detected, but not Ubuntu. Please install golangci-lint using your package manager."
                echo "Examples:"
                echo "  apt: sudo apt install golangci-lint"
                echo "  yum: sudo yum install golangci-lint"
                echo "  pacman: sudo pacman -S golangci-lint"
                exit 0
              fi
            else
              echo "Linux detected, but OS information could not be determined."
              echo "Please install golangci-lint using your package manager."
              exit 0
            fi
            exit 1
            ;;
          *)
            echo "Unsupported OS: $GOOS"
            exit 1
            ;;
        esac
  lint:
      desc: Run linters using golangci-lint
      cmds:
        - golangci-lint run --config .golangci.yml
      silent: true
  tests:
    desc: Run tests
    cmds:
      - task: test1
      - task: test2
      - task: test3
      - task: test4
      - task: test5
      - task: test6
      - task: test7
      - task: test8
      - task: test9
      - echo "Tests are done"

  test1:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=^TestIteration1$ {{.test_cmd}}"

  test2:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration2 {{.test_cmd}}"

  test3:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration3 {{.test_cmd}}"

  test4:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration4 {{.test_cmd}}"

  test5:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration5 {{.test_cmd}}"

  test6:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration6 {{.test_cmd}}"

  test7:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration7 {{.test_cmd}}"

  test8:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration8 {{.test_cmd}}"
  test9:
    cmds:
      - "{{.build_cmd}} && ./shortenertest -test.run=TestIteration9 {{.test_cmd}}"